{
  "plugin_type": "widget",
  "name": "OPT - Dialog",
  "edit_page_url": "https://apj-association.optimizely.asia/",
  "form_schema": [
    {
      "label": "A text field",
      "default_value": "Open Dialog",
      "name": "text",
      "field_type": "text",
      "options": null
    },
    {
      "label": "Element",
      "default_value": "body",
      "name": "element",
      "field_type": "selector",
      "options": null
    },
    {
      "label": "Close Text",
      "default_value": "Close",
      "name": "closeText",
      "field_type": "text",
      "options": null
    },
    {
      "label": "Action Text",
      "default_value": "Approve",
      "name": "approveText",
      "field_type": "text",
      "options": null
    },
    {
      "label": "Dialog Title",
      "default_value": "Are you sure you want to permanently delete this file?",
      "name": "dialogTitle",
      "field_type": "text",
      "options": null
    },
    {
      "label": "Dialog Description",
      "default_value": "This will permanently delete the file.",
      "name": "dialogDescription",
      "field_type": "text",
      "options": null
    }
  ],
  "description": "",
  "options": {
    "html": "<div id=\"optimizely-extension-{{ extension.$instance }}\" class=\"evan---dialog\">\n<button class=\"cd-btn cd-btn--primary\" aria-controls=\"dialog-1\"> {{ extension.text }} </button>\n\n<div id=\"dialog-1\" class=\"dialog js-dialog\" data-animation=\"on\">\n  <div class=\"dialog__content\" role=\"alertdialog\" aria-labelledby=\"dialog-title-1\" aria-describedby=\"dialog-description-1\">\n    <h4 id=\"dialog-title-1\" class=\"dialog__title\"> {{ extension.dialogTitle }} </h4>\n\n    <p id=\"dialog-description-1\" class=\"dialog__description\"> {{ extension.dialogDescription }} </p>\n\n    <footer class=\"dialog__footer\">\n      <button class=\"cd-btn cd-btn--subtle js-dialog__close\"> {{ extension.closeText }} </button>\n      <button class=\"cd-btn cd-btn--accent\"> {{ extension.approveText }} </button>\n    </footer>\n  </div>\n</div>\n\n</div>",
    "css": "/* -------------------------------- \n\nFile#: _1_dialog\nTitle: Dialog\nDescr: Overlay informing user about tasks/decisions\nUsage: codyhouse.co/license\n\n-------------------------------- */\n\n/* -------------------------------- \n\nButtons \n\n-------------------------------- */\n\n.cd-btn {\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  white-space: nowrap;\n  text-decoration: none;\n  padding: 0.5rem 1rem;\n  border-radius: 0.375em;\n  font-size: 1em;\n  text-decoration: none;\n  line-height: 1.2;\n  cursor: pointer;\n  transition: 0.2s;\n  will-change: transform;\n}\n\n.cd-btn:focus-visible {\n  outline: none;\n}\n\n.cd-btn:active {\n  transform: translateY(2px);\n}\n\n.cd-btn--primary {\n  background: hsl(250, 84%, 54%);\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.15), \n              0 1px 3px hsla(250, 84%, 38%, 0.25), \n              0 2px 6px hsla(250, 84%, 38%, 0.1), \n              0 6px 10px -2px hsla(250, 84%, 38%, 0.25);\n  color: hsl(0, 0%, 100%);\n}\n\n.cd-btn--primary:hover {\n  background: hsl(250, 84%, 60%);\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.15), \n              0 1px 2px hsla(250, 84%, 38%, 0.25), \n              0 1px 4px hsla(250, 84%, 38%, 0.1), \n              0 3px 6px -2px hsla(250, 84%, 38%, 0.25);\n}\n\n.cd-btn--primary:focus-visible {\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.15), \n              0 1px 2px hsla(250, 84%, 38%, 0.25), \n              0 1px 4px hsla(250, 84%, 38%, 0.1), \n              0 3px 6px -2px hsla(250, 84%, 38%, 0.25), \n              0 0 0 2px hsl(0, 0%, 100%), \n              0 0 0 4px hsl(250, 84%, 54%);\n}\n\n.cd-btn--subtle {\n  background: hsl(0, 0%, 100%);\n  color: hsl(230, 13%, 9%);\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.1), \n              0 0 0 1px hsla(230, 13%, 9%, 0.02), \n              0 0.3px 0.4px hsla(230, 13%, 9%, 0.025),\n              0 1px 3px -1px hsla(230, 13%, 9%, 0.2), \n              0 3.5px 6px hsla(230, 13%, 9%, 0.12);\n}\n\n.cd-btn--subtle:hover {\n  background: hsl(0, 0%, 100%);\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.1), \n              0 0 0 1px hsla(230, 13%, 9%, 0.02), \n              0 0.1px 0.3px hsla(230, 13%, 9%, 0.06),\n              0 1px 2px hsla(230, 13%, 9%, 0.12),\n              0 1px 3px -1px hsla(230, 13%, 9%, 0.2);\n}\n\n.cd-btn--subtle:focus-visible {\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.1), \n              0 0 0 1px hsla(230, 13%, 9%, 0.02), \n              0 0.3px 0.4px hsla(230, 13%, 9%, 0.025),\n              0 1px 3px -1px hsla(230, 13%, 9%, 0.2), \n              0 3.5px 6px hsla(230, 13%, 9%, 0.12), \n              0 0 0 2px hsl(0, 0%, 100%), \n              0 0 0 4px hsl(230, 7%, 23%);\n}\n\n.cd-btn--accent {\n  background: hsl(342, 89%, 48%);\n  color: hsl(0, 0%, 100%);\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.15), \n              0 1px 3px hsla(342, 89%, 38%, 0.25), \n              0 2px 6px hsla(342, 89%, 38%, 0.1), \n              0 6px 10px -2px hsla(342, 89%, 38%, 0.25);\n}\n\n.cd-btn--accent:hover {\n  background: hsl(342, 89%, 56%);\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.15), \n              0 1px 2px hsla(342, 89%, 38%, 0.25), \n              0 1px 4px hsla(342, 89%, 38%, 0.1), \n              0 3px 6px -2px hsla(342, 89%, 38%, 0.1);\n}\n\n.cd-btn--accent:focus-visible {\n  box-shadow: inset 0 1px 0 hsla(0, 0%, 100%, 0.15), \n              0 1px 2px hsla(342, 89%, 38%, 0.25), \n              0 1px 4px hsla(342, 89%, 38%, 0.1), \n              0 3px 6px -2px hsla(342, 89%, 38%, 0.1), \n              0 0 0 2px hsl(0, 0%, 100%), \n              0 0 0 4px hsl(342, 89%, 48%);\n}\n\n.cd-btn--disabled, .cd-btn[disabled], .cd-btn[readonly] {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* -------------------------------- \n\nComponent \n\n-------------------------------- */\n\n.dialog {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 15;\n  opacity: 0;\n  visibility: hidden;\n}\n\n.dialog__content {\n  width: calc(100% - 3rem);\n  max-width: 32rem;\n  overflow: auto;\n  padding: 1.5rem;\n  background-color: hsl(0, 0%, 100%);\n  box-shadow: 0 0 0 1px hsla(230, 13%, 9%, 0.05),\n              0 1.2px 1.9px -1px hsla(230, 13%, 9%, 0.01),\n              0 3px 5px -1px hsla(230, 13%, 9%, 0.015),\n              0 8px 15px -1px hsla(230, 13%, 9%, 0.05),\n              0 28px 40px -1px hsla(230, 13%, 9%, 0.1);\n  border-radius: 0.75em;\n}\n\n.dialog__title {\n  color: hsl(230, 13%, 9%);\n  font-size: 1.375rem;\n  margin-bottom: 0.75rem;\n}\n\n.dialog__description {\n  color: hsl(225, 4%, 47%);\n  font-size: 0.9375rem;\n}\n\n.dialog__footer {\n  margin-top: 1.5rem;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.75rem;\n  justify-content: end;\n}\n\n.dialog--is-visible {\n  opacity: 1;\n  visibility: visible;\n}\n\n.dialog--sticky {\n  align-items: flex-start;\n}\n\n.dialog--sticky .dialog__content {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.dialog[data-animation=on] {\n  transition: opacity 0.3s, visibility 0s 0.3s;\n  perspective: 800px;\n}\n.dialog[data-animation=on] .dialog__content {\n  will-change: transform;\n  transition: transform 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);\n  transform: translateY(10%);\n}\n\n.dialog[data-animation=on].dialog--is-visible {\n  transition: opacity 0.3s;\n}\n\n.dialog[data-animation=on].dialog--is-visible .dialog__content {\n  transform: translateY(0);\n}\n\n.dialog[data-animation=on].dialog--sticky .dialog__content {\n  transform: translateY(-100%);\n}\n\n.dialog[data-animation=on].dialog--sticky.dialog--is-visible {\n  transition: none;\n}\n\n.dialog[data-animation=on].dialog--sticky.dialog--is-visible .dialog__content {\n  transform: translateY(0);\n}",
    "apply_js": "\n\n\n\n// File#: _1_dialog\n// Usage: codyhouse.co/license\n(function() {\n  \n  const utils = window.optimizely.get('utils');\n\n  utils.waitForElement(extension.element)\n  .then(function(elem) {\n    // Prepend the extension html to the body\n    elem.insertAdjacentHTML('afterbegin', extension.$html);\n    init();\n  });\n\n  function init(){\n\n    var Dialog = function(element) {\n      this.element = element;\n      this.triggers = document.querySelectorAll('[aria-controls=\"'+this.element.getAttribute('id')+'\"]');\n      this.firstFocusable = null;\n      this.lastFocusable = null;\n      this.selectedTrigger = null;\n      this.showClass = \"dialog--is-visible\";\n      this.binding = false;\n      initDialog(this);\n    };\n\n    function initDialog(dialog) {\n      if ( dialog.triggers ) {\n        for(var i = 0; i < dialog.triggers.length; i++) {\n          dialog.triggers[i].addEventListener('click', function(event) {\n            event.preventDefault();\n            dialog.selectedTrigger = event.target;\n            showDialog(dialog);\n            initDialogEvents(dialog);\n          });\n        }\n      }\n\n      // listen to the openDialog event -> open dialog without a trigger button\n      dialog.element.addEventListener('openDialog', function(event){\n        if(event.detail) self.selectedTrigger = event.detail;\n        showDialog(dialog);\n        initDialogEvents(dialog);\n      });\n\n      // listen to the closeDialog event -> close dialog without a trigger button\n      dialog.element.addEventListener('closeDialog', function(event){\n        if(event.detail) self.selectedTrigger = event.detail;\n        closeDialog(dialog);\n      });\n    };\n\n    function showDialog(dialog) {\n      dialog.element.classList.add(dialog.showClass);\n      getFocusableElements(dialog);\n      dialog.firstFocusable.focus();\n      // wait for the end of transitions before moving focus\n      dialog.element.addEventListener(\"transitionend\", function cb(event) {\n        dialog.firstFocusable.focus();\n        dialog.element.removeEventListener(\"transitionend\", cb);\n      });\n      emitDialogEvents(dialog, 'dialogIsOpen');\n    };\n\n    function closeDialog(dialog) {\n      dialog.element.classList.remove(dialog.showClass);\n      dialog.firstFocusable = null;\n      dialog.lastFocusable = null;\n      if(dialog.selectedTrigger) dialog.selectedTrigger.focus();\n      //remove listeners\n      cancelDialogEvents(dialog);\n      emitDialogEvents(dialog, 'dialogIsClose');\n    };\n\n    function initDialogEvents(dialog) {\n      //add event listeners\n      dialog.binding = handleEvent.bind(dialog);\n      dialog.element.addEventListener('keydown', dialog.binding);\n      dialog.element.addEventListener('click', dialog.binding);\n    };\n\n    function cancelDialogEvents(dialog) {\n      //remove event listeners\n      dialog.element.removeEventListener('keydown', dialog.binding);\n      dialog.element.removeEventListener('click', dialog.binding);\n    };\n\n    function handleEvent(event) {\n      // handle events\n      switch(event.type) {\n        case 'click': {\n          initClick(this, event);\n        }\n        case 'keydown': {\n          initKeyDown(this, event);\n        }\n      }\n    };\n\n    function initKeyDown(dialog, event) {\n      if( event.keyCode && event.keyCode == 27 || event.key && event.key == 'Escape' ) {\n        //close dialog on esc\n        closeDialog(dialog);\n      } else if( event.keyCode && event.keyCode == 9 || event.key && event.key == 'Tab' ) {\n        //trap focus inside dialog\n        trapFocus(dialog, event);\n      }\n    };\n\n    function initClick(dialog, event) {\n      //close dialog when clicking on close button\n      if( !event.target.closest('.js-dialog__close') ) return;\n      event.preventDefault();\n      closeDialog(dialog);\n    };\n\n    function trapFocus(dialog, event) {\n      if( dialog.firstFocusable == document.activeElement && event.shiftKey) {\n        //on Shift+Tab -> focus last focusable element when focus moves out of dialog\n        event.preventDefault();\n        dialog.lastFocusable.focus();\n      }\n      if( dialog.lastFocusable == document.activeElement && !event.shiftKey) {\n        //on Tab -> focus first focusable element when focus moves out of dialog\n        event.preventDefault();\n        dialog.firstFocusable.focus();\n      }\n    };\n\n    function getFocusableElements(dialog) {\n      //get all focusable elements inside the dialog\n      var allFocusable = dialog.element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable], audio[controls], video[controls], summary');\n      getFirstVisible(dialog, allFocusable);\n      getLastVisible(dialog, allFocusable);\n    };\n\n    function getFirstVisible(dialog, elements) {\n      //get first visible focusable element inside the dialog\n      for(var i = 0; i < elements.length; i++) {\n        if( elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length ) {\n          dialog.firstFocusable = elements[i];\n          return true;\n        }\n      }\n    };\n\n    function getLastVisible(dialog, elements) {\n      //get last visible focusable element inside the dialog\n      for(var i = elements.length - 1; i >= 0; i--) {\n        if( elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length ) {\n          dialog.lastFocusable = elements[i];\n          return true;\n        }\n      }\n    };\n\n    function emitDialogEvents(dialog, eventName) {\n      var event = new CustomEvent(eventName, {detail: dialog.selectedTrigger});\n      dialog.element.dispatchEvent(event);\n    };\n\n    //initialize the Dialog objects\n    var dialogs = document.getElementsByClassName('js-dialog');\n    if( dialogs.length > 0 ) {\n      for( var i = 0; i < dialogs.length; i++) {\n        (function(i){new Dialog(dialogs[i]);})(i);\n      }\n    }\n  }\n}());",
    "undo_js": "/*\n * Editor now supports ES6 compliant code. Note that adding ES6\n * specific code to an experiment will break for users running\n * ES5-only browsers as code entered is not transpiled down to ES5.\n */\n \n  const extensionElement = document.getElementById('optimizely-extension-' + extension.$instance);\n  if (extensionElement) {\n    extensionElement.parentElement.removeChild(extensionElement);\n  }\n"
  }
}